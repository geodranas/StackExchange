#include <iostream>
#include <algorithm>
#include <string>
using namespace std;

string N[] = { "ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE" };

string Q(string S)
{
	string R = "";

	for (int i = 0; i < 9; i++)
	{
		do
		{
			if (S.find(N[i]) != string::npos)
			{
				S.erase(S.find(N[i]), N[i].size());
				R += to_string(i + 1);
			}

		} while (next_permutation(N[i].begin(), N[i].end()));
	}

	return R;
}

int main()
{
	string sEncrypted = "ONETWOOWTONEOXISISXNEOININROUF";

	for (int i = 0; i < 9; i++)
		sort(N[i].begin(), N[i].end());
	
	cout << Q(sEncrypted);
}

// Link to the problem: https://codegolf.stackexchange.com/questions/131852/the-original-number
